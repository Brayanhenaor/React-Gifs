{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,sBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAG9BR,GAAc,SAACS,GAAD,OAAgBP,GAAhB,mBAA8BO,OAC5CN,EAAc,MAId,SACI,uBAAOO,KAAK,OACRC,MAAOT,EACPU,SAlBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAXxB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAY,IAAD,EACVd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAHwB,mBAC7BC,EAD6B,KACtBC,EADsB,KAgBpC,OAVAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAOkB,EACPL,SAAU,SAIpB,CAACpB,IAEIqB,EDbuBK,CAAa1B,GAA/Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEiBtBgB,EA9BM,WAAK,IAAD,EAGezC,mBAAS,CAAC,cAHzB,mBAGdQ,EAHc,KAGFT,EAHE,KASrB,OACI,qCACI,8CAEI,cAAC,EAAD,CAAaA,cAAeA,IAEhC,uBAEA,6BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEGA,SAAUA,GADLA,YCpBjC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d0dd5ac1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange=(e)=>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n\n        if(inputValue.trim().length < 2)\n            return;\n\n        setCategories((categories) =>[inputValue,...categories]);\n        setInputValue('');\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}/>\n        </form>\n    )\n}\n\nAddCategory.propTypes={\n    setCategories : PropTypes.func.isRequired\n}\n","export const getGifs = async (category)=>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=mItgeCyY0to1R3G9xSiWZyPF73vLkEof`;\n    const resp = await fetch(url);\n\n    const {data} = await resp.json();\n\n    const gifs = data.map(img=>{\n        return {\n            id : img.id,\n            title : img.title,\n            url : img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n    \n    const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}/>\n                    ))\n                        \n                }  \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category)=>{\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(()=>{\n        getGifs(category).then(imgs=>{\n            setState({\n                data : imgs,\n                loading : false\n            })\n        });\n        \n    },[category])\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = ()=>{\n\n\n    const [categories, setCategories] = useState(['One pucnh'])\n\n    // const handleAdd = ()=>{\n    //     setCategories([...categories, 'Brayan']);\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n                <AddCategory setCategories={setCategories}/>\n\n            <hr/>\n\n            <ol>\n                {\n                    categories.map(category =>\n                         <GifGrid \n                            key={category}\n                            category={category}/>\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}